"""
В данном упражнении мы будем симулировать 1000 выбрасываний
игральных костей. Начнем с написания функции, выполняющей
случайное выбрасывание двух обычных шестигранных костей. Эта функция не
будет принимать входных параметров, а возвращать должна число,
 выпавшее в сумме на двух костях.
В основной программе реализуйте симуляцию тысячи выбрасываний
костей. Программа должна хранить все результаты с частотой их выпадения.
 После завершения процесса должна быть показана итоговая таблица
с  результатами, похожая на ту, что представлена в табл. 6.1. Выразите
частоту выпадения каждого из чисел в процентах вместе с ожидаемым
результатом согласно теории вероятностей.
"""
import  random

def sum_rock():
    return random.randint(1,6) + random.randint (1,6)


def main():
    data = dict()

    for _ in range(1000):
        dices_sum = sum_rock()
        if dices_sum not in data:
            data[dices_sum] = 1
        else:
            data[dices_sum] += 1

    experiment_data = {key: value / 1000 * 100 for key, value in data.items()}
    expected_data = {2: 2.78, 3: 5.56, 4: 8.33, 5: 11.11, 6: 13.89, 7: 16.67, 8: 13.89, 9: 11.11, 10: 8.33, 11: 5.56, 12: 2.78}

    print(f"{'Исход'}\t{'Процент симуляции'}\t{'Ожидаемый процент'}")
    for key, expected in zip(sorted(experiment_data), expected_data):
        print(f"{key}\t\t{experiment_data[key]:.2f}\t\t\t\t{expected_data[expected]}")


if __name__ == '__main__':
    main()


